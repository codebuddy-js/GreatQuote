{"ast":null,"code":"var _jsxFileName = \"/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/AllQuote.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dummy_Quotes = [{\n  id: \"q1\",\n  author: \"Himanshu\",\n  text: \"Learn More Gain More..!!\"\n}, {\n  id: \"q2\",\n  author: \"Mukko\",\n  text: \"It's Good to be Selfish..!!\"\n}];\n\nconst AllQuote = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getAllQuotes);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuote || loadedQuote.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: Dummy_Quotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllQuote, \"8e9KEnX5bMcKb42oW1/cATf6V7I=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuote;\nexport default AllQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuote\");","map":{"version":3,"sources":["/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/AllQuote.js"],"names":["Fragment","useEffect","QuoteList","LoadingSpinner","useHttp","NoQuotesFound","getAllQuotes","Dummy_Quotes","id","author","text","AllQuote","sendRequest","status","data","loadedQuote","error","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,UAApB;AAAgCC,EAAAA,IAAI,EAAE;AAAtC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,OAApB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CAFmB,CAArB;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,WAA7B;AAA0CC,IAAAA;AAA1C,MAAoDZ,OAAO,CAACE,YAAD,CAAjE;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACL,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,WAAD,IAAgBA,WAAW,CAACE,MAAZ,KAAuB,CAAlE,CAAJ,EAA0E;AACxE,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEV;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BD;;GAAMI,Q;UACsDP,O;;;KADtDO,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\"\nimport { getAllQuotes } from \"../lib/api\";\n\nconst Dummy_Quotes = [\n  { id: \"q1\", author: \"Himanshu\", text: \"Learn More Gain More..!!\" },\n  { id: \"q2\", author: \"Mukko\", text: \"It's Good to be Selfish..!!\" },\n];\n\nconst AllQuote = () => {\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getAllQuotes);\n\n  useEffect(() => {\n    sendRequest()\n  },[sendRequest])\n\n  if (status === 'pending') {\n    return <div className=\"centered\">\n      <LoadingSpinner/>\n    </div>\n  }\n \n  if (error) {\n    return <div className=\"centered focused\">{error}</div>\n  }\n\n  if (status === 'completed' && (!loadedQuote || loadedQuote.length === 0)) {\n    return <NoQuotesFound/>\n  }\n\n  return (\n    <Fragment>\n      <QuoteList quotes={Dummy_Quotes} />\n    </Fragment>\n  );\n};\n\nexport default AllQuote;\n"]},"metadata":{},"sourceType":"module"}