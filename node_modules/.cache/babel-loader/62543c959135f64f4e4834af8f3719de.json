{"ast":null,"code":"var _jsxFileName = \"/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst searchQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) return quoteA.id > quoteB.id ? 1 : -1;else return quoteA.id < quoteB.id ? 1 : -1;\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const quotesParams = new URLSearchParams(location.search);\n  const isSortAscending = quotesParams.get('sort') === 'asc';\n  console.log(isSortAscending);\n  const sortedQuote = searchQuotes(props.quotes, isSortAscending);\n\n  const changeOrderHandler = () => {\n    history.push(\"/quotes/?sort=\" + (isSortAscending ? 'desc' : 'asc'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeOrderHandler,\n        children: [\"Sort \", isSortAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuote.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","searchQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","quotesParams","URLSearchParams","search","isSortAscending","get","console","log","sortedQuote","changeOrderHandler","push","sorting","list","map","quote","author","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AAC3C,SAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;AACpC,QAAIH,SAAJ,EACE,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC,CADF,KAGE,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACH,GALK,CAAP;AAMA,CAPD;;AASA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAMC,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,YAAY,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAArB;AAEA,QAAMC,eAAe,GAAGH,YAAY,CAACI,GAAb,CAAiB,MAAjB,MAA6B,KAArD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AAEA,QAAMI,WAAW,GAAGlB,YAAY,CAACQ,KAAK,CAACP,MAAP,EAAca,eAAd,CAAhC;;AAEA,QAAMK,kBAAkB,GAAG,MAAM;AAChCV,IAAAA,OAAO,CAACW,IAAR,CAAa,oBAAoBN,eAAe,GAAE,MAAF,GAAS,KAA5C,CAAb;AACA,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACsB,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,kBAAjB;AAAA,4BAA2CL,eAAe,GAAE,YAAF,GAAe,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAEf,OAAO,CAACuB,IAAvB;AAAA,gBACGJ,WAAW,CAACK,GAAZ,CAAiBC,KAAD,iBACf,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAAClB,EAFZ;AAGE,QAAA,MAAM,EAAEkB,KAAK,CAACC,MAHhB;AAIE,QAAA,IAAI,EAAED,KAAK,CAACE;AAJd,SACOF,KAAK,CAAClB,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAjCD;;GAAMC,S;UAEYX,U,EACCC,W;;;KAHbU,S;AAmCN,eAAeA,SAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst searchQuotes = (quotes, ascending) => {\n return quotes.sort((quoteA, quoteB) => {\n    if (ascending)\n      return quoteA.id > quoteB.id ? 1 : -1;\n    else\n      return quoteA.id < quoteB.id ? 1 : -1;\n  })\n}\n\nconst QuoteList = (props) => {\n  \n  const history = useHistory();\n  const location = useLocation();\n  \n  const quotesParams = new URLSearchParams(location.search)\n\n  const isSortAscending = quotesParams.get('sort') === 'asc';\n  console.log(isSortAscending)\n\n  const sortedQuote = searchQuotes(props.quotes,isSortAscending)\n\n  const changeOrderHandler = () => {\n   history.push(\"/quotes/?sort=\" + (isSortAscending ?'desc':'asc'));\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeOrderHandler}>Sort {isSortAscending? 'Descending':'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuote.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;"]},"metadata":{},"sourceType":"module"}