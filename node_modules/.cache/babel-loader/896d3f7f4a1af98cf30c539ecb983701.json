{"ast":null,"code":"var _jsxFileName = \"/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Link, Route, useParams } from 'react-router-dom';\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dummy_Quotes = [{\n  id: \"q1\",\n  author: \"Himanshu\",\n  text: \"Learn More Gain More..!!\"\n}, {\n  id: \"q2\",\n  author: \"Mukko\",\n  text: \"It's Good to be Selfish..!!\"\n}];\n\nconst QuoteDetails = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const param = useParams();\n  const quote = Dummy_Quotes.find(quote => quote.id === param.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found..!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.pathname}/${param.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${param.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${param.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"J9KU2VpQ2oK7S84Sc/kd3uFEOQE=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/QuoteDetails.js"],"names":["React","Fragment","useRouteMatch","Link","Route","useParams","Comments","HighlightedQuote","Dummy_Quotes","id","author","text","QuoteDetails","match","param","quote","find","quoteId","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,UAApB;AAAgCC,EAAAA,IAAI,EAAE;AAAtC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,OAApB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CAFmB,CAArB;;AAKA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGX,aAAa,EAA3B;AACA,QAAMY,KAAK,GAAGT,SAAS,EAAvB;AAEA,QAAMU,KAAK,GAAGP,YAAY,CAACQ,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACN,EAAN,KAAaK,KAAK,CAACG,OAA9C,CAAd;;AAEA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACJ,IAA9B;AAAoC,MAAA,MAAM,EAAEI,KAAK,CAACL;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACK,QAAS,IAAGJ,KAAK,CAACG,OAAQ,EAAhD;AAAmD,MAAA,KAAK,MAAxD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,WAAUH,KAAK,CAACG,OAAQ,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUH,KAAK,CAACG,OAAQ,WAAtC;AAAA,6BACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvBD;;GAAML,Y;UACUV,a,EACAG,S;;;KAFVO,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, {Fragment}from 'react'\nimport { useRouteMatch } from 'react-router-dom';\nimport { Link, Route, useParams } from 'react-router-dom';\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nconst Dummy_Quotes = [\n  { id: \"q1\", author: \"Himanshu\", text: \"Learn More Gain More..!!\" },\n  { id: \"q2\", author: \"Mukko\", text: \"It's Good to be Selfish..!!\" },\n];\n\nconst QuoteDetails = () => {\n  const match = useRouteMatch();\n  const param = useParams();\n\n  const quote = Dummy_Quotes.find(quote => quote.id === param.quoteId);\n  \n  if (!quote) {\n    return <p>No quote found..!</p>\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={`${match.pathname}/${param.quoteId}`} exact>\n        <div className=\"centered\">\n        <Link className=\"btn--flat\" to={`/quotes/${param.quoteId}/comments`}>Load Comments</Link>\n       </div>\n      </Route>\n      <Route path={`/quotes/${param.quoteId}/comments`} >\n      <Comments />\n        </Route>  \n    </Fragment>\n  )\n}\n\nexport default QuoteDetails;"]},"metadata":{},"sourceType":"module"}