{"ast":null,"code":"var _jsxFileName = \"/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useCallback } from 'react/cjs/react.production.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote\n  } = useHttp(getAllComments);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  });\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed' && loadedQuote.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(CommentsList, {\n        comments: loadedQuote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'failed' && loadedQuote.length === 0) {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: \"No comments Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      addCommentData: addCommentHandler,\n      quoteId: quoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"OybynEcWGFt32JhMkOg0G4jNd1I=\", false, function () {\n  return [useHttp, useParams];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"names":["useEffect","useState","useParams","useHttp","getAllComments","LoadingSpinner","CommentsList","classes","NewCommentForm","useCallback","Comments","isAddingComment","setIsAddingComment","sendRequest","status","data","loadedQuote","params","quoteId","startAddCommentHandler","addCommentHandler","comments","length"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,gCAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAACY,IAAAA,WAAD;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,IAAI,EAAEC;AAA3B,MAA0Cb,OAAO,CAACC,cAAD,CAAvD;AACA,QAAMa,MAAM,GAAGf,SAAS,EAAxB;AAEA,QAAM;AAAEgB,IAAAA;AAAF,MAAcD,MAApB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW,CAACK,OAAD,CAAX;AACD,GAFQ,EAEP,CAACL,WAAD,EAAaK,OAAb,CAFO,CAAT;;AAIA,QAAMC,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,QAAMQ,iBAAiB,GAAGX,WAAW,CAAC,MAAM;AAC1CI,IAAAA,WAAW,CAACK,OAAD,CAAX;AACD,GAFoC,CAArC;AAIA,MAAIG,QAAJ;;AAEA,MAAIP,MAAM,KAAK,SAAf,EAA0B;AACxBO,IAAAA,QAAQ,gBAAG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAA0B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,MAAIP,MAAM,KAAK,WAAX,IAA0BE,WAAW,CAACM,MAAZ,GAAqB,CAAnD,EAAsD;AACpDD,IAAAA,QAAQ,gBAAG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAA0B,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,MAAIF,MAAM,KAAK,QAAX,IAAuBE,WAAW,CAACM,MAAZ,KAAuB,CAAlD,EAAqD;AACnDD,IAAAA,QAAQ,gBAAG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEd,OAAO,CAACc,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,cAAc,EAAGS,iBAAjC;AAAoD,MAAA,OAAO,EAAEF;AAA7D;AAAA;AAAA;AAAA;AAAA,YAPtB,EAQGG,QARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7CD;;GAAMX,Q;UAE4CP,O,EACjCD,S;;;KAHXQ,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import {useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useCallback } from 'react/cjs/react.production.min';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {sendRequest,status, data: loadedQuote} = useHttp(getAllComments);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);  \n  },[sendRequest,quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  })\n  \n  let comments;\n\n  if (status === 'pending') {\n    comments = <div className='centered'><LoadingSpinner/></div>\n  }\n\n  if (status === 'completed' && loadedQuote.length > 0) {\n    comments = <div className='centered'><CommentsList comments={loadedQuote}/></div>\n  }\n\n  if (status === 'failed' && loadedQuote.length === 0) {\n    comments = <div className='centered'>No comments Found</div>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm addCommentData ={addCommentHandler} quoteId={quoteId} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}