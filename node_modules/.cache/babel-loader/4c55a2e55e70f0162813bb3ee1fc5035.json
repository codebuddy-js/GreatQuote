{"ast":null,"code":"var _jsxFileName = \"/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport { useEffect } from \"react/cjs/react.production.min\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const match = useRouteMatch();\n  const param = useParams();\n  const {\n    quoteId\n  } = param;\n  console.log(quoteId);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!loadedQuote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found..!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"SWlWmelYo+ryW/87IqcfVhn7jdI=\", false, function () {\n  return [useHttp, useRouteMatch, useParams];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/QuoteDetails.js"],"names":["React","Fragment","Link","Route","useParams","useRouteMatch","useEffect","Comments","HighlightedQuote","LoadingSpinner","useHttp","getSingleQuote","QuoteDetails","sendRequest","status","data","loadedQuote","error","match","param","quoteId","console","log","text","author","path","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,aAAjC,QAAqD,kBAArD;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AACNC,IAAAA,WADM;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,WAHF;AAIJC,IAAAA;AAJI,MAKFP,OAAO,CAACC,cAAD,EAAiB,IAAjB,CALX;AAMA,QAAMO,KAAK,GAAGb,aAAa,EAA3B;AACA,QAAMc,KAAK,GAAGf,SAAS,EAAvB;AAEA,QAAM;AAAEgB,IAAAA;AAAF,MAAcD,KAApB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAGAd,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW,CAACO,OAAD,CAAX;AACD,GAFQ,EAEN,CAACA,OAAD,EAAUP,WAAV,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACD,WAAL,EAAkB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,WAAW,CAACO,IAApC;AAA0C,MAAA,MAAM,EAAEP,WAAW,CAACQ;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEN,KAAK,CAACO,IAAK,EAA3B;AAA8B,MAAA,KAAK,MAAnC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEP,KAAK,CAACQ,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAER,KAAK,CAACO,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7CD;;GAAMb,Y;UAMAF,O,EACUL,a,EACAD,S;;;KARVQ,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Link, Route, useParams, useRouteMatch} from \"react-router-dom\";\nimport { useEffect } from \"react/cjs/react.production.min\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetails = () => {\n  const {\n  sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n  const match = useRouteMatch();\n  const param = useParams();\n  \n  const { quoteId } = param;\n  console.log(quoteId);\n  \n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  if (status === \"pending\") {\n    return <LoadingSpinner />;\n  }\n\n  if (error) {\n    return <div className=\"centered\">{error}</div>;\n  }\n\n  if (!loadedQuote) {\n    return <p>No quote found..!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={`${match.path}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n"]},"metadata":{},"sourceType":"module"}