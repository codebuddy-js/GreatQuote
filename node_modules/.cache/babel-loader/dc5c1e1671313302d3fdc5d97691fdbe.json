{"ast":null,"code":"var _jsxFileName = \"/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/AllQuote.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuote = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getAllQuotes);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n  console.log(loadedQuote);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === \"completed\" && (!loadedQuote || loadedQuote.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuote\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllQuote, \"45utkOTECUe1OKMYICMLUdGWKf4=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuote;\nexport default AllQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuote\");","map":{"version":3,"sources":["/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/AllQuote.js"],"names":["Fragment","useEffect","QuoteList","LoadingSpinner","useHttp","NoQuotesFound","getAllQuotes","AllQuote","sendRequest","status","data","loadedQuote","error","console","log","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,WAHF;AAIJC,IAAAA;AAJI,MAKFR,OAAO,CAACE,YAAD,CALX;AAOAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AAEA,MAAIF,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIH,MAAM,KAAK,WAAX,KAA2B,CAACE,WAAD,IAAgBA,WAAW,CAACI,MAAZ,KAAuB,CAAlE,CAAJ,EAA0E;AACxE,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA/BD;;GAAMJ,Q;UAMAH,O;;;KANAG,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuote = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getAllQuotes);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  console.log(loadedQuote);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className=\"centered focused\">{error}</div>;\n  }\n\n  if (status === \"completed\" && (!loadedQuote || loadedQuote.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuote} />;\n};\n\nexport default AllQuote;\n"]},"metadata":{},"sourceType":"module"}