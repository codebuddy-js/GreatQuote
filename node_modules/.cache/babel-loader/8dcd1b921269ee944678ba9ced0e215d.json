{"ast":null,"code":"var _jsxFileName = \"/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Link, Route, useParams } from 'react-router-dom';\nimport { useEffect } from 'react/cjs/react.production.min';\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const param = useParams();\n  const {\n    quoteId\n  } = param;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!loadedQuote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found..!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"pi+1HRAYCjuEPAC5rftIZy8W9QU=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/Pages/QuoteDetails.js"],"names":["React","Fragment","useRouteMatch","Link","Route","useParams","useEffect","Comments","HighlightedQuote","LoadingSpinner","useHttp","getSingleQuote","QuoteDetails","match","param","quoteId","sendRequest","status","data","loadedQuote","error","text","author","path","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGX,aAAa,EAA3B;AACA,QAAMY,KAAK,GAAGT,SAAS,EAAvB;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,WAA7B;AAA0CC,IAAAA;AAA1C,MAAoDV,OAAO,CAACC,cAAD,EAAgB,IAAhB,CAAjE;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFQ,EAEP,CAACC,WAAD,EAAaD,OAAb,CAFO,CAAT;;AAIA,MAAIE,MAAM,KAAK,SAAf,EAA0B;AACvB,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEF,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACD,WAAL,EAAkB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,WAAW,CAACE,IAApC;AAA0C,MAAA,MAAM,EAAEF,WAAW,CAACG;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAET,KAAK,CAACU,IAAK,EAA3B;AAA8B,MAAA,KAAK,MAAnC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAA3B;AAAA,6BACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;GAAMX,Y;UACUV,a,EACAG,S,EAI4CK,O;;;KANtDE,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import React, {Fragment}from 'react'\nimport { useRouteMatch } from 'react-router-dom';\nimport { Link, Route, useParams } from 'react-router-dom';\nimport { useEffect } from 'react/cjs/react.production.min';\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\n\n\n\nconst QuoteDetails = () => {\n  const match = useRouteMatch();\n  const param = useParams();\n\n  const { quoteId } = param;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote,true);\n  \n\n  \n  useEffect(() => {\n    sendRequest(quoteId)\n  },[sendRequest,quoteId])\n\n  if (status === 'pending') {\n     return <LoadingSpinner/>\n   }\n\n  if (error) {\n    return <div className='centered'>{error}</div>\n  }\n  \n  if (!loadedQuote) {\n    return <p>No quote found..!</p>\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={`${match.path}`} exact>\n        <div className=\"centered\">\n        <Link className=\"btn--flat\" to={`${match.url}/comments`}>Load Comments</Link>\n       </div>\n      </Route>\n      <Route path={`${match.path}/comments`} >\n      <Comments />\n        </Route>  \n    </Fragment>\n  )\n}\n\nexport default QuoteDetails;"]},"metadata":{},"sourceType":"module"}