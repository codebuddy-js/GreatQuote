{"ast":null,"code":"var _jsxFileName = \"/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status\n  } = useHttp(addComment);\n  const {\n    addComment\n  } = props;\n  useEffect(() => {\n    if (status === 'completed') {\n      addComment();\n    }\n  }, [addComment, status]);\n\n  const submitFormHandler = event => {\n    event.preventDefault(); // optional: Could validate here\n\n    const enteredComment = commentTextRef.current.value; // send comment to server\n\n    sendRequest({\n      commentData: {\n        text: enteredComment\n      },\n      quoteId: props.quoteId\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"nAmNCFaMLrYpLuk6aiD//RzDMoE=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["/home/dhiman_g/Documents/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js"],"names":["useRef","useEffect","useRouteMatch","useHistory","useHttp","addComment","classes","NewCommentForm","props","commentTextRef","sendRequest","status","submitFormHandler","event","preventDefault","enteredComment","current","value","commentData","text","quoteId","form","control","actions"],"mappings":";;;AAAA,SAASA,MAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,cAAc,GAAGT,MAAM,EAA7B;AACA,QAAM;AAAEU,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAyBP,OAAO,CAACC,UAAD,CAAtC;AAEA,QAAM;AAAEA,IAAAA;AAAF,MAAiBG,KAAvB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,MAAM,KAAK,WAAf,EAA4B;AAC1BN,MAAAA,UAAU;AACX;AACF,GAJQ,EAIP,CAACA,UAAD,EAAYM,MAAZ,CAJO,CAAT;;AAMA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAGnC;;AACA,UAAMC,cAAc,GAAGN,cAAc,CAACO,OAAf,CAAuBC,KAA9C,CAJmC,CAOnC;;AACAP,IAAAA,WAAW,CAAC;AAAEQ,MAAAA,WAAW,EAAE;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAAf;AAAyCK,MAAAA,OAAO,EAACZ,KAAK,CAACY;AAAvD,KAAD,CAAX;AAED,GAVD;;AAYA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACe,IAAzB;AAA+B,IAAA,QAAQ,EAAET,iBAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACgB,OAAxB;AAAiC,MAAA,QAAQ,EAAEV,iBAA3C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,GAAG,EAAEH;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACiB,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnCD;;GAAMhB,c;UAE2BH,O;;;KAF3BG,c;AAqCN,eAAeA,cAAf","sourcesContent":["import { useRef,useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status} = useHttp(addComment);\n  \n  const { addComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed') {\n      addComment();\n    }\n  },[addComment,status])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    const enteredComment = commentTextRef.current.value;\n\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredComment }, quoteId:props.quoteId })\n\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"]},"metadata":{},"sourceType":"module"}